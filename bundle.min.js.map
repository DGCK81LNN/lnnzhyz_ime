{
  "version": 3,
  "sources": ["../lnnzhyz/scanner.ts", "../lnnzhyz/syllable.ts", "../lnnzhyz/letteral.ts", "../lnnzhyz/scan_roman.ts", "../lnnzhyz/boundaries.ts", "../app.mjs"],
  "sourcesContent": ["export class Scanner {\n  string: string\n  scanPos: number\n  private _scanned: string\n\n  get scanned() {\n    return this._scanned\n  }\n\n  constructor(string: string, start = 0) {\n    this.string = string\n    this.scanPos = start\n    this._scanned = \"\"\n  }\n\n  scan(patterns: string | string[]) {\n    if (typeof patterns === \"string\") patterns = patterns.split(\" \")\n    for (const pattern of patterns) {\n      if (this.string.startsWith(pattern, this.scanPos)) {\n        this.scanPos += pattern.length\n        this._scanned = pattern\n        return pattern\n      }\n    }\n    this._scanned = \"\"\n    return \"\"\n  }\n}\n\nexport function inList(needle: string | undefined, haystack: string) {\n  if (needle === undefined) return false\n  return haystack.split(\" \").includes(needle)\n}\n", "import { inList, Scanner } from \"./scanner\"\n\nfunction scanRomanInitial(s: Scanner) {\n  if (s.scan(\"ng w b p m f d t n l g k h j q x zh ch sh r z c s\"))\n    return s.scanned\n}\n\ntype Final = [string, string, string]\n\nfunction scanRomanFinal(s: Scanner, initial = \"\"): Final {\n  if (s.scan(\"iung\")) return [\"y\", \"e\", \"ng\"]\n  if (inList(initial, \"zh ch sh r z c s\") && s.scan(\"ih\")) return [\"\", \"\", \"\"]\n  if (s.scan(\"eo\")) return [\"\", \"e\", \"\"]\n  if (!initial && s.scan(\"er ar\")) return [\"\", s.scanned[0], \"r\"]\n\n  return [\n    s.scan(\"i u y\") || \"\",\n    s.scan(\"e a o\") || \"\",\n    s.scan(\"ng i u n\") || \"\",\n  ]\n}\n\nfunction qualifyFinal(\n  initial?: string,\n  glide?: string,\n  vowel?: string,\n  coda?: string\n): Final | null {\n  if (!(glide || vowel || coda)) {\n    if (inList(initial, \"zh ch sh r z c s m n ng\")) return ok()\n    if (inList(initial, \"d l\")) return ok(\"e\")\n    return null\n  }\n\n  const semivowelCoda = inList(coda, \"i u\")\n\n  if (!vowel) {\n    if (!initial && glide === \"u\" && coda && !semivowelCoda)\n      return [\"\", \"o\", coda]\n    if (coda) return ok(\"e\")\n  }\n\n  if (vowel === \"o\") {\n    if (!initial && !glide && vowel && !semivowelCoda) return ok()\n    if (!glide && !coda) return [\"u\", \"e\", \"\"]\n    if (glide === \"i\" && coda === \"ng\") return [\"y\", \"e\", \"ng\"]\n\n    return ok(\"e\")\n  }\n\n  if (vowel === \"e\") {\n    if (!initial && !glide && vowel && !coda) return ok(\"eh\")\n    return ok()\n  }\n\n  return ok()\n\n  function ok(_vowel = vowel): Final {\n    return [glide || \"\", _vowel || \"\", coda || \"\"]\n  }\n}\n\nconst initials = [\"\", ...\"bpmfdtnlgkhjqx\", \"zh\", \"ch\", \"sh\", ...\"rzcs\"]\nconst glides = [\"i\", \"u\", \"y\"]\nconst vowels = [\"e\", \"a\", \"o\", \"eh\"]\nconst codas = [\"i\", \"u\", \"n\", \"ng\", \"r\"]\n\nfunction getTone(str: string) {\n  if (!str || inList(str, \"0 1 w\")) return 1\n  if (inList(str, \"2 z\")) return 2\n  if (inList(str, \"3 x\")) return 3\n  if (inList(str, \"4 h\")) return 4\n  throw new Error(\"Invalid tone\")\n}\n\nexport class Syllable {\n  initial: string\n  glide: string\n  vowel: string\n  coda: string\n  tone: number\n\n  constructor(initial = \"\", glide = \"\", vowel = \"\", coda = \"\", tone = 0) {\n    this.initial = initial\n    this.glide = glide\n    this.vowel = vowel\n    this.coda = coda\n    this.tone = tone\n  }\n\n  static scanRoman(str: string) {\n    const s = new Scanner(str)\n\n    if (s.scan(\"hm0 hm1 hng0 hng1\"))\n      return {\n        end: s.scanPos,\n        data: new Syllable(\"h\", \"\", \"\", s.scanned.slice(1, -1), 0),\n        fine: true,\n      }\n    if (s.scan(\"hm hng\"))\n      return {\n        end: s.scanPos,\n        data: new Syllable(\"h\", \"\", \"\", s.scanned.slice(1), 0),\n        fine: s.scanPos < str.length,\n      }\n\n    let initial = scanRomanInitial(s)\n    const scannedFinal = scanRomanFinal(s, initial)\n    const final = qualifyFinal(initial, ...scannedFinal)\n    if (!final) return {\n      end: 0,\n      data: null,\n      fine: s.scanPos < str.length,\n    }\n    const [glide, vowel, coda] = final\n\n    if (inList(initial, \"ng w\")) initial = \"\"\n\n    s.scan(\"0 1 2 3 4 w z x h\")\n    const fine = !!s.scanned || str.length > s.scanPos\n    const tone = getTone(s.scanned)\n\n    return {\n      end: s.scanPos,\n      data: new Syllable(initial, glide, vowel, coda, tone),\n      fine,\n    }\n  }\n\n  // Ruby \u540E\u9057\u75C7\uFF08\u786E\u4FE1\uFF09\n  inspect() {\n    const a = [this.initial, this.glide, this.vowel, this.coda, this.tone]\n    return `[${a.filter(i => !!i).join(\"-\")}]`\n  }\n\n  toString() {\n    const ii = initials.indexOf(this.initial)\n    if (ii === -1) throw new Error(\"Invalid syllable\")\n    let str = String.fromCharCode(0xe050 + ii)\n\n    if (this.tone === 0) {\n      if (this.coda === \"m\") return str + \"\\ue080\"\n      if (this.coda === \"ng\") return str + \"\\ue081\"\n      throw new Error(\"Invalid syllable\")\n    }\n\n    const gi = glides.indexOf(this.glide)\n    const vi = vowels.indexOf(this.vowel)\n    const ci = codas.indexOf(this.coda)\n\n    str += String.fromCharCode(0xe070 + (this.tone - 1))\n    if (gi !== -1) str += String.fromCharCode(0xe074 + gi)\n    if (vi !== -1) str += String.fromCharCode(0xe077 + vi)\n    if (ci !== -1) str += String.fromCharCode(0xe07b + ci)\n    return str\n  }\n}\n", "// prettier-ignore\nconst table: Record<string, string> = {\n  \"0\":  \"\\ue040\", \"1\":  \"\\ue041\",  \"2\":  \"\\ue042\", \"3\":  \"\\ue043\",\n  \"4\":  \"\\ue044\", \"5\":  \"\\ue045\",  \"6\":  \"\\ue046\", \"7\":  \"\\ue047\",\n  \"8\":  \"\\ue048\", \"9\":  \"\\ue049\",  \"xa\": \"\\ue04a\", \"xb\": \"\\ue04b\",\n  \"xc\": \"\\ue04c\", \"xd\": \"\\ue04d\",  \"xe\": \"\\ue04e\", \"xf\": \"\\ue04f\",\n  \"w\":  \"\\ue050\", \"b\":  \"\\ue051\",  \"p\":  \"\\ue052\", \"m\":  \"\\ue053\",\n  \"f\":  \"\\ue054\", \"d\":  \"\\ue055\",  \"t\":  \"\\ue056\", \"n\":  \"\\ue057\",\n  \"l\":  \"\\ue058\", \"g\":  \"\\ue059\",  \"k\":  \"\\ue05a\", \"h\":  \"\\ue05b\",\n  \"j\":  \"\\ue05c\", \"q\":  \"\\ue05d\",  \"x\":  \"\\ue05e\", \"zh\": \"\\ue05f\",\n  \"ch\": \"\\ue060\", \"sh\": \"\\ue061\",  \"r\":  \"\\ue062\", \"z\":  \"\\ue063\",\n  \"c\":  \"\\ue064\", \"s\":  \"\\ue065\",  \"v\":  \"\\ue066\", \"i\":  \"\\ue067\",\n  \"u\":  \"\\ue068\", \"y\":  \"\\ue069\",  \"e\":  \"\\ue06a\", \"a\":  \"\\ue06b\",\n  \"o\":  \"\\ue06c\", \"er\": \"\\ue06d\",  \"_\":  \"\\ue06e\",\n\n  \"-\": \"- \",      \"--\": \"\\u2013 \", \"---\": \"\\u2014 \",\n  \".\": \"\\uff61 \", \"..\": \". \",      \"...\": \"\u2026 \",\n  \",\": \", \",      \",,\": \"\\uff64 \",\n}\n\nconst tableKeys = Object.keys(table)\n\nexport function scanRoman(str: string) {\n  for (let i = str.length; i; --i) {\n    const sub = str.slice(0, i)\n    if (sub in table)\n      return {\n        end: i,\n        result: table[sub],\n        fine: !tableKeys.some(key => key !== sub && key.startsWith(str)),\n      }\n  }\n  return {\n    end: 0,\n    result: null,\n    fine: !tableKeys.some(key => key.startsWith(str)),\n  }\n}\n", "import { Syllable } from \"./syllable\"\nimport * as Letteral from \"./letteral\"\n\nexport function scanRoman(str: string): {\n  end: number\n  result: string\n  data: unknown\n  fine: boolean\n} | null {\n  const str0Lower = str[0].toLowerCase()\n\n  const sub = str0Lower + str.slice(1)\n  const prefix = str[0] !== str0Lower ? \"\\ue06f\" : \"\"\n\n  const letScan = Letteral.scanRoman(sub)\n  const sylScan = Syllable.scanRoman(sub)\n\n  if (letScan.result && (sylScan === null || sylScan.end <= letScan.end))\n    return {\n      end: letScan.end,\n      result: prefix + letScan.result,\n      data: letScan.result,\n      fine: letScan.fine && sylScan.fine,\n    }\n\n  if (sylScan.data)\n    return {\n      end: sylScan.end,\n      result: prefix + sylScan.data.toString(),\n      data: sylScan.data,\n      fine: sylScan.fine,\n    }\n\n  return {\n    end: 0,\n    result: \"\",\n    data: null,\n    fine: sylScan.fine && letScan.fine,\n  }\n}\n", "const rightMarks = /^\\ue06f$/\nconst leftMarks = /^[\\ue070-\\ue081]$/\n\nexport function isBoundary(text: string, pos: number) {\n  if (pos > 0 && text[pos - 1].match(rightMarks)) return false\n  if (pos < text.length && text[pos].match(leftMarks)) return false\n  return true\n}\n\nexport function findBoundary(text: string, pos: number, dir?: \"left\" | \"right\") {\n  if (pos < 0) pos = 0\n  else if (pos > text.length) pos = text.length\n\n  if (!dir) {\n    if (pos > 0 && text[pos - 1].match(rightMarks)) dir = \"left\"\n    else dir = \"right\"\n  }\n\n  if (dir === \"left\") {\n    while (pos > 0 && !isBoundary(text, pos)) pos--\n  } else {\n    while (pos < text.length && !isBoundary(text, pos)) pos++\n  }\n  return pos\n}\n", "import * as LNNZHYZ from \"./lnnzhyz\"\nimport { findBoundary } from \"./lnnzhyz\"\n\nfunction $$$(id) {\n  return document.getElementById(id)\n}\n\nif (/^iP|^Mac/.test(navigator.platform)) {\n  try {\n    document.querySelector(\"meta[name=viewport]\").content += \",user-scalable=no\"\n  } catch (_) { }\n}\n\n/** @type {HTMLTextAreaElement} */\nconst $input = $$$(\"input\")\nconst $inputFaux = $$$(\"input-faux\")\nconst $inputFauxContent = $$$(\"input-faux-content\")\nconst $inputFloater = $$$(\"input-floater\")\nconst $inputFloaterPrev = $$$(\"input-floater-prev\")\nconst $inputFloaterComp = $$$(\"input-floater-comp\")\n/** @type {HTMLInputElement} */\nconst $toggle = $$$(\"toggle\")\n\n/**\n * Suspend handling of `selectionchange` and `beforeinput` events to prevent\n * emulated input emitting events and causing infinite recursion.\n */\nlet suspended = false\n\n//#region autoresize\n\nfunction autoResize() {\n  $input.style.height = \"auto\"\n  var scrlHeight = $input.scrollHeight\n  var height = `${scrlHeight + 2}px`\n  $input.style.height = height\n  $inputFaux.style.height = height\n}\n\n$input.addEventListener(\"input\", () => void autoResize())\nwindow.addEventListener(\"resize\", () => void autoResize())\n\n//#endregion\n\n//#region selection fix\n\nfunction getAnchorFocus() {\n  var left = $input.selectionStart\n  var right = $input.selectionEnd\n  if ($input.selectionDirection === \"backward\") return [right, left]\n  return [left, right]\n}\n\nfunction setAnchorFocus(anchor, focus) {\n  if (focus < anchor) $input.setSelectionRange(focus, anchor, \"backward\")\n  else $input.setSelectionRange(anchor, focus, \"forward\")\n}\n\nfunction autoCorrectSelection() {\n  let [anchor, focus] = getAnchorFocus()\n  anchor = findBoundary($input.value, anchor)\n  focus = findBoundary($input.value, focus)\n  setAnchorFocus(anchor, focus)\n}\n\nfunction shiftFocus(forward, shiftKey) {\n  let [anchor, focus] = getAnchorFocus()\n  if (shiftKey) {\n    focus += forward ? 1 : -1\n    focus = findBoundary($input.value, focus, forward ? \"right\" : \"left\")\n    setAnchorFocus(anchor, focus)\n    return true\n  } else if (anchor === focus) {\n    focus += forward ? 1 : -1\n    focus = findBoundary($input.value, focus, forward ? \"right\" : \"left\")\n    setAnchorFocus(focus, focus)\n    return true\n  }\n  return false\n}\n\nfunction deleteChar(forward) {\n  let [anchor, focus] = getAnchorFocus()\n  if (anchor === focus) {\n    focus += forward ? 1 : -1\n    focus = findBoundary($input.value, focus, forward ? \"right\" : \"left\")\n    setAnchorFocus(anchor, focus)\n    insertText(\"\")\n    return true\n  }\n  return false\n}\n\nvar hasFocus = false\n\n$input.addEventListener(\"focus\", () => {\n  hasFocus = true\n})\n\n$input.addEventListener(\"blur\", () => {\n  hasFocus = false\n})\n\n$input.addEventListener(\"keydown\", ev => {\n  if (ev.key === \"ArrowLeft\") {\n    if (shiftFocus(false, ev.shiftKey)) ev.preventDefault()\n    return\n  }\n  if (ev.key === \"ArrowRight\") {\n    if (shiftFocus(true, ev.shiftKey)) ev.preventDefault()\n    return\n  }\n\n  if (!comp) {\n    if (ev.key === \"Backspace\") {\n      if (deleteChar(false)) ev.preventDefault()\n      return\n    }\n    if (ev.key === \"Delete\") {\n      if (deleteChar(true)) ev.preventDefault()\n      return\n    }\n  }\n})\n\ndocument.addEventListener(\"selectionchange\", () => {\n  if (!suspended && hasFocus) autoCorrectSelection()\n})\n\n//#endregion\n\n//#region IME logic\n\nfunction insertText(text) {\n  $input.focus()\n  suspended = true\n  document.execCommand(\"insertText\", false, text) ||\n    $input.setRangeText(text, $input.selectionStart, $input.selectionEnd, \"end\")\n  suspended = false\n  caretPos = $input.selectionStart\n}\n\nfunction updateFloater() {\n  const text =\n    ((scan && scan.result) || \"\") + comp.slice((scan && scan.end) || 0)\n  if (text) {\n    $inputFauxContent.textContent = $input.value.slice(0, $input.selectionStart)\n    $inputFloater.classList.add(\"visible\")\n    $inputFloaterPrev.textContent = text\n    $inputFloaterComp.textContent = comp\n  } else {\n    $inputFloater.classList.remove(\"visible\")\n  }\n}\n\nvar enabled = true\nvar comp = \"\"\nvar scan\nvar caretPos = 0\n\nfunction setEnabled(val) {\n  enabled = val\n  if (!val && comp) abortComp()\n}\n\n/** @returns {void} */\nfunction updateComp() {\n  if (!comp) {\n    scan = null\n    updateFloater()\n    return\n  }\n\n  scan = LNNZHYZ.scanRoman(comp)\n  if (!scan.result && scan.fine) {\n    insertText(comp[0])\n    comp = comp.slice(1)\n    return updateComp()\n  }\n\n  updateFloater()\n  if (scan.fine) return acceptComp()\n}\n\nfunction acceptComp() {\n  if (!scan.result) return rejectComp()\n\n  comp = comp.slice(scan.end)\n  let result = scan.result\n  scan = null\n  updateFloater()\n  insertText(result)\n  if (comp) updateComp()\n}\n\nfunction rejectComp() {\n  insertText(comp)\n  abortComp()\n}\n\nfunction abortComp() {\n  comp = \"\"\n  scan = null\n  updateFloater()\n}\n\n$input.addEventListener(\"blur\", () => {\n  if (enabled) abortComp()\n})\n\ndocument.addEventListener(\"selectionchange\", () => {\n  if (enabled && !suspended && $input.selectionStart !== caretPos) abortComp()\n})\n\nvar onlyShift = false\n\n$input.addEventListener(\"keydown\", ev => {\n  onlyShift = false\n  if (ev.key === \"Shift\") {\n    onlyShift = true\n    return\n  }\n  if (!enabled || !comp) return\n  if (ev.key === \"Backspace\") {\n    ev.preventDefault()\n    comp = comp.slice(0, -1)\n    return updateComp()\n  }\n  if (ev.key === \" \") {\n    ev.preventDefault()\n    return acceptComp()\n  }\n  if (ev.key === \"Enter\") {\n    ev.preventDefault()\n    return rejectComp()\n  }\n  if (ev.key === \"Escape\") {\n    ev.preventDefault()\n    return abortComp()\n  }\n})\n\n$input.addEventListener(\"keyup\", ev => {\n  if (ev.key === \"Shift\" && onlyShift) {\n    setEnabled(!enabled)\n    $toggle.checked = enabled\n  }\n})\n\n$input.addEventListener(\"beforeinput\", ev => {\n  if (!enabled || suspended || ev.inputType !== \"insertText\") return\n  ev.preventDefault()\n  comp += ev.data\n  caretPos = $input.selectionStart\n  updateComp()\n})\n\n$toggle.addEventListener(\"change\", () => {\n  setEnabled($toggle.checked)\n})\n\n//#endregion\n"],
  "mappings": "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",
  "names": []
}
